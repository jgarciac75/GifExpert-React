{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","addCategoria","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","handleInputChange","getGifs","categoria","a","url","encodeURI","console","log","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","GifExpertApp","categorias","setCategorias","index","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaE,OAGI,aAFA,CAEA,QAAMC,SAZS,SAACC,GACpBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IAC1BR,EAAaE,GACbC,EAAc,MAQZ,SACE,uBACEM,KAAK,OACLC,MAAOR,EACPS,SAAW,SAACN,GAAD,OAnBK,SAACA,GACzBF,EAAeE,EAAEO,OAAOF,OAkBCG,CAAkBR,S,+BCzBlCS,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEiCC,UAAUH,GAF3C,sDAGnBI,QAAQC,IAAIH,GAHO,SAIAI,MAAMJ,GAJN,cAIbK,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXZ,IAAG,UAAEU,EAAIG,cAAN,aAAE,EAAYC,iBAAiBd,QAVvB,kBAebQ,GAfa,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMZ,EAAS,EAATA,IAElC,OACI,sBAAKgB,UAAU,0CAAf,UAGQ,qBAAKC,IAAKjB,EAAKkB,IAAKN,IACpB,4BAAIA,QCHPO,EAAU,SAAC,GAAiB,IAAhBrB,EAAe,EAAfA,UACrB,ECDwB,SAACA,GACzB,MAA0Bd,mBACtB,CACIuB,KAAK,GACLa,SAAQ,IAHhB,mBAAOC,EAAP,KAAcC,EAAd,KA0BA,OAnBAC,qBAAU,WACN1B,EAAQC,GACP0B,MAAK,SAAAd,GACFe,YAAW,WACPH,EAAS,CAACf,KAAKG,EAAIU,SAAQ,MAC5B,UAIT,CAACtB,IAUIuB,ED1BuBK,CAAa5B,GAA/Be,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAanB,OACI,qCACI,oBAAIJ,UAAU,qCAAd,SAAoDlB,IAEvDsB,GAAS,4CACV,qBAAKJ,UAAU,YAAf,SAYYH,EAAOJ,KAAI,SAAAC,GAAG,OAEL,cAAC,EAAD,eAGOA,GADCA,EAAIC,aEM1BgB,EA1CM,WAKjB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmBC,EAAnB,KAWA,OACI,qCAEA,8CAGA,cAAC,EAAD,CAAa9C,aAfK,SAAAe,GAAS,OAAI+B,EAAc,CAAC/B,GAAF,mBAAgB8B,QAgB5D,uBACA,6BAESA,EAAWnB,KAAI,SAACX,EAAUgC,GACvB,OACI,cAAC,EAAD,CAEIhC,UAAWA,GADNA,Y,MC5BjCiC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.30f4044b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({addCategoria}) => {\r\n\r\n  const [inputValue, setinputValue] = useState(''); // Inicializar siempre el useState\r\n  const handleInputChange = (e)=>{\r\n    setinputValue( e.target.value)\r\n  }\r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n    if(inputValue.trim().length>2){\r\n      addCategoria(inputValue);\r\n      setinputValue('');\r\n    }\r\n        // console.log('Submint ya')\r\n\r\n  }\r\n    return (\r\n        // <>\r\n        // {/* <h1>{inputValue}</h1> */}\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={ (e)=> handleInputChange(e)}\r\n             />\r\n        </form>\r\n        // </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes ={\r\n  addCategoria : PropTypes.func.isRequired \r\n};\r\n","export const getGifs = async (categoria) =>{\r\n    // La Url con Datos Concetenados\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=ZW4uBIAco4YSZtqDK4Dm3QrnLEQRrzZx`;\r\n    console.log(url)\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img=>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    // console.log(gifs)\r\n   // setImages(gifs);\r\n   return gifs\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    // console.log({id,title,url})\r\n    return (\r\n        <div className=\"card animate__animated  animate__fadeIn\"\r\n            // key={img.id}\r\n            >\r\n                <img src={url} alt={title}/>\r\n                <p>{title}</p>\r\n            {/* {img.title} */}\r\n        </div>\r\n    )\r\n}\r\n","// import React, { useState, useEffect } from 'react'\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport {GifGridItem} from './GifGridItem'\r\n// import {getGifs} from '../helpers/getGifs'\r\n\r\nexport const GifGrid = ({categoria}) => {\r\n    const {data:images,loading} = useFetchGifs(categoria);\r\n    // console.log(data,loading)\r\n    // const [images, setImages] = useState([]);\r\n    // // const [count, setCount] = useState(0);\r\n    // // Ejectura una instruccioon cuando se ejecuta por primera vez\r\n    // // Primer Parametros es la funcion a utilizar y la segunda las dependencias\r\n    // useEffect(()=>{\r\n    //     // getGifs()\r\n    //     getGifs(categoria).then(setImages)\r\n\r\n    // },[categoria]);    \r\n\r\n//    getGifs();\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated  animate__fadeIn\">{categoria}</h3>\r\n            {/* {loading?<p>Cargando...</p>:'Datos Cargados...'} */}\r\n        {loading&&<p>Cargando...</p>}\r\n        <div className=\"card-grid\">\r\n            {/* <ol> */}\r\n                {\r\n                    // images.map(({id,title,url}) =>\r\n                    //      (\r\n                    //         <li \r\n                    //             key={id} >\r\n                    //             {title}\r\n                    //             <img src={url}/>\r\n                    //         </li>                            \r\n                    //     ))\r\n                    \r\n                    images.map(img =>\r\n                         (\r\n                             <GifGridItem \r\n                                //img={img} \r\n                                key={img.id}\r\n                                {...img} // Enviar las Propiedades como una Propuedad Independient\r\n                                />\r\n                        )\r\n                    ) \r\n\r\n                }\r\n                \r\n            {/* </ol> */}\r\n            {/* <h3>{count}</h3> */}\r\n            {/* <button onClick={()=>setCount(count+1)}>Add Count</button> */}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","// El Nombre use... inicia asi para saber que es un hook \r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n// hook son cunfciones\r\nexport const useFetchGifs = (categoria)=>{\r\n    const [state, setState] = useState(\r\n        {\r\n            data:[],\r\n            loading:true\r\n        }\r\n    );\r\n\r\n    useEffect(()=>{\r\n        getGifs(categoria)\r\n        .then(img=> {\r\n            setTimeout(() => {\r\n                setState({data:img,loading:false})\r\n            }, 3000);\r\n\r\n        }) //setImages)\r\n\r\n    },[categoria]);  \r\n    \r\n    // setTimeout(() => {\r\n    //     setState(\r\n    //         {\r\n    //             data:[1,2,3,4],\r\n    //             loading:false\r\n    //         }\r\n    //     )\r\n    // }, 3000);\r\n    return state;\r\n}","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory.js\";\r\nimport { GifGrid } from \"./components/GifGrid.js\";\r\n\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n\r\n    // const categorias = ['One Punch','Samurai X','Dragon Ball'];\r\n    //const [categorias, setCategorias] = useState(['One Punch','Samurai X','Dragon Ball'])\r\n    const [categorias, setCategorias] = useState(['One Punch']); //,'Samurai X','Dragon Ball']);\r\n\r\n    const addCategorias = categoria => setCategorias([categoria, ...categorias]);\r\n    // const handleAdd = (e)=>{\r\n    //     //\r\n    //     // setCategorias('Valor') ==> Este toca el estado y solo queda el valor como string\r\n    //     // Toca Manipulas la Categoria...\r\n    //     // setCategorias(categ => [...categ,'otroValor'])\r\n    //     //\r\n    //     setCategorias([...categorias,'Super Agente Cobra']);\r\n    // }\r\n    return(\r\n        <>\r\n        \r\n        <h2>GifExpertApp</h2>\r\n        {/* <button  onClick={handleAdd}>Agregar</button> */}\r\n         {/* Paso una Funcion para poder comunicar entre todas */}\r\n        <AddCategory addCategoria={addCategorias}/>\r\n        <hr />\r\n        <ol>\r\n            {\r\n                 categorias.map((categoria,index) => {\r\n                    return (\r\n                        <GifGrid \r\n                            key={categoria}\r\n                            categoria={categoria}\r\n                        />\r\n                    //   <li key={categoria}> {categoria}</li>\r\n                    )\r\n                 })\r\n            }\r\n        </ol>\r\n \r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}